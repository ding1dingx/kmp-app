apply plugin: "com.diffplug.spotless"

// https://github.com/pinterest/ktlint
def ktlintVersion = "1.3.1"

spotless {
  java {
    target("**/*.java")
    targetExclude("**/build/**/*.java", "${rootProject.rootDir}/spotless/**")
    toggleOffOn("@formatter:off", "@formatter:on")
    importOrder()
    removeUnusedImports()
    trimTrailingWhitespace()
    endWithNewline()
    // https://github.com/palantir/palantir-java-format
    palantirJavaFormat("2.47.0").style("GOOGLE").formatJavadoc(true)
    formatAnnotations()
  }

  kotlin {
    target("**/*.kt")
    targetExclude("**/build/**/*.kt", "${rootProject.rootDir}/spotless/**")
    ktlint(ktlintVersion).setEditorConfigPath(
      "${rootProject.rootDir}/.editorconfig"
    ).editorConfigOverride(
      [
        "android"                                          : "true",
        "continuation_indent_size"                         : "2",
        // Lowercase names are great for grouping multiple functions and/or types.
        "ktlint_standard_filename"                         : "disabled",
        // Making something an expression body should be a choice around readability.
        "ktlint_standard_function-expression-body"         : "disabled",
        "ktlint_function_naming_ignore_when_annotated_with": "Composable",
        "ktlint_compose_compositionlocal-allowlist"        : "disabled"
      ]
    ).customRuleSets(
      // https://github.com/mrmans0n/compose-rules
      ["io.nlopez.compose.rules:ktlint:0.4.5"]
    )
  }

  kotlinGradle {
    target("**/*.gradle.kts")
    ktlint(ktlintVersion).setEditorConfigPath("${rootProject.rootDir}/.editorconfig")
  }

  format("xml") {
    target("**/*.xml")
    targetExclude("**/build/**/*.xml", "**/lint-config/**/*.xml", "${rootProject.rootDir}/spotless/**")
    // Look for the first XML tag that isn't a comment (<!--) or the xml declaration (<?xml)
    licenseHeaderFile(rootProject.file("spotless/copyright.xml"), "(<[^!?])")
  }
}
